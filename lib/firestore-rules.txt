rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is an admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Users can read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow admins to read all user profiles
      allow read: if request.auth != null;
      // Allow admins to update/delete any user (for admin dashboard)
      allow write, delete: if isAdmin();
    }
    
    // Items are readable by all authenticated users
    // Only the creator can update/delete their items
    match /items/{itemId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.reporterId;
      // Allow admins to update/delete any item (for admin dashboard)
      allow update, delete: if isAdmin();
    }
    
    // Claims are readable by item owner and claimant
    match /claims/{claimId} {
      allow read, create: if request.auth != null;
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.claimantId ||
        request.auth.uid == resource.data.itemOwnerId
      );
      // Allow admins to read/write all claims (for admin dashboard)
      allow read, write: if isAdmin();
    }
  }
}